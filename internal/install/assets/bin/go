#!/usr/bin/env bash

# Find the path to the actual `go` binary. We accept the first one we find that
# isn't THIS script.
THIS=$(realpath "$0")
for f in $(which -a go); do
  if [[ "$(realpath $f)" != "$THIS" ]]; then
    GO="$f"
    break
  fi
done

# If we didn't find a `go` binary, then we can't do anything.
if [[ -z "$GO" ]]; then
  echo "command not found: go"
  exit 1
fi

# If the subcommand isn't doc, then we can just run the `go` binary normally
# with all arguments.
if [[ $1 != "doc" ]]; then
  if [[ $1 == "-" ]] || [[ $1 == "--" ]]; then
    shift
  fi
  $GO "$@"
  exit
fi

# Pop off the subcommand argument.
shift

# Run the alternative go-doc binary with all remaining arguments.
go-doc "$@"

# vim: shiftwidth=2
